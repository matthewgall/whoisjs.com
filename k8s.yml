apiVersion: v1
kind: Namespace
metadata:
  name: ${NAMESPACE}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${NAME}
  labels:
    app: ${NAME}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ${NAME}
  template:
    metadata:
      labels:
        app: ${NAME}
    spec:
      containers:
      - name: ${NAME}
        image: ${IMAGE}:edge
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        env:
          - name: HOST
            value: '0.0.0.0'
          - name: REDIS
            valueFrom:
              secretKeyRef:
                name: ${NAME}-secrets
                key: redis
          - name: REDIS_TTL
            value: '604800'
          - name: ENGINE
            value: paste
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: com.matthewgall.kubernetes/isp
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: ${NAME}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${NAME}-ingress
spec:
  rules:
  - host: "whoisjs.com"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: ${NAME}
            port:
              number: 80
  - host: "www.whoisjs.com"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: ${NAME}
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: ${NAME}
spec:
  ports:
  - name: http
    targetPort: 5000
    port: 80
  selector:
    app: ${NAME}
---
apiVersion: v1
kind: Service
metadata:
  name: ${NAME}-redis
spec:
  ports:
  - name: tcp
    targetPort: 6379
    port: 6379
  selector:
    app: ${NAME}-redis
